#ifdef PREFIX
#define NAMEM(n) \
	name PREFIX##n##""
#else
#define NAMEM(n) \
	name n##""
#endif

parm {
	NAMEM("type")
	label	"Type"
	type	ordinal
	default	{ "1" }
	help	"Mapping type"
	menu	{
	    "None"	"None"
	    "Planar"	"Planar"
	    "Spherical"	"Spherical"
	    "Cylindrical"	"Cylindrical"
	    "Ball"	"Ball"
	    "Cubic"	"Cubic"
	    "Triplanar"	"Triplanar"
	    "Perspective"	"Perspective"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2,3,4,5,6,8" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "type" }
	parmtag	{ "vray_type" "int" }
	
    }
    parm {
	NAMEM("fitfill")
	label	"Fit Fill"
	type	ordinal
	default	{ "0" }
	help	"Fit fill"
	menu	{
	    "Fit Fill"	"Fit Fill"
	    "Horizontal"	"Horizontal"
	    "Vertical"	"Vertical"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "fitfill" }
	parmtag	{ "vray_type" "int" }
	
    }
    parm {
	NAMEM("fittype")
	label	"Fit Type"
	type	ordinal
	default	{ "0" }
	help	"Fit type"
	menu	{
	    "None"	"None"
	    "Match camera film gate"	"Match camera film gate"
	    "Match camera resolution"	"Match camera resolution"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "fittype" }
	parmtag	{ "vray_type" "int" }
	
    }
    parm {
	NAMEM("u_angle")
	label	"U Angle"
	type	float
	default	{ "3.14159" }
	range	{ 0 64 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "u_angle" }
	parmtag	{ "vray_type" "float" }
	
    }
    parm {
	NAMEM("v_angle")
	label	"V Angle"
	type	float
	default	{ "1.5708" }
	range	{ 0 64 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "v_angle" }
	parmtag	{ "vray_type" "float" }
	
    }
    parm {
	NAMEM("film_gate_w")
	label	"Film Gate W"
	type	float
	default	{ "1" }
	range	{ 0 64 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "film_gate_w" }
	parmtag	{ "vray_type" "float" }
	
    }
    parm {
	NAMEM("film_gate_h")
	label	"Film Gate H"
	type	float
	default	{ "1" }
	range	{ 0 64 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "film_gate_h" }
	parmtag	{ "vray_type" "float" }
	
    }
    parm {
	NAMEM("hide_backface")
	label	"Hide Backface"
	type	toggle
	default	{ "0" }
	help	"Determine whether to project on back faces of polygons when in perspective mode"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "hide_backface" }
	parmtag	{ "vray_type" "boolean" }
	
    }
    parm {
	NAMEM("hide_occluded")
	label	"Hide Occluded"
	type	toggle
	default	{ "0" }
	help	"Determine whether to project on occluded points when in perspective mode"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "hide_occluded" }
	parmtag	{ "vray_type" "boolean" }
	
    }
    parm {
	NAMEM("object_space")
	label	"Object Space"
	type	toggle
	default	{ "1" }
	help	"If true the projection will be applied in the object space of the currently shaded geometry"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "UVWGenProjection" }
	parmtag	{ "vray_pluginattr" "object_space" }
	parmtag	{ "vray_type" "boolean" }
	
    }

#undef NAMEM
#undef PREFIX